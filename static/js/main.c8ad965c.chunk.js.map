{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","value","onClick","Board","squares","reducer","state","action","type","xIsNext","payload","step","history","slice","concat","Game","useReducer","Array","fill","dispatch","current","length","winner","calculateWinner","status","moves","map","move","desc","jumpTo","i","handleClick","winnerLines","isDraw","a","b","c","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8ad965c.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Square(props) {\n    return (\n        <button className={props.value?\"btn disabled\":\"btn\"} onClick={props.onClick}>{props.value}</button>\n    )\n}\n","import React from 'react'\nimport Square from './Square'\n\nexport default function Board(props) {\n    return (\n        <div className=\"board\">\n            <div>\n                <Square value={props.squares[0]}  onClick={()=>{props.onClick(0)}} />\n                <Square value={props.squares[1]}  onClick={()=>{props.onClick(1)}} />\n                <Square value={props.squares[2]}  onClick={()=>{props.onClick(2)}} />\n            </div> \n            <div>\n                <Square value={props.squares[3]}  onClick={()=>{props.onClick(3)}} />\n                <Square value={props.squares[4]}  onClick={()=>{props.onClick(4)}} />\n                <Square value={props.squares[5]}  onClick={()=>{props.onClick(5)}} />\n            </div>\n            <div>\n                <Square value={props.squares[6]}  onClick={()=>{props.onClick(6)}} />\n                <Square value={props.squares[7]}  onClick={()=>{props.onClick(7)}} />\n                <Square value={props.squares[8]}  onClick={()=>{props.onClick(8)}} />\n            </div>            \n        </div>\n    )\n}\n","import React, { useReducer } from 'react'\nimport Board from './Board'\n\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'JUMP':\n            return {\n                ...state,\n                xIsNext: action.payload.step%2 === 0,\n                history: state.history.slice(0, action.payload.step + 1)\n            }\n        case 'MOVE':\n            return {\n                ...state,\n                history: state.history.concat({squares: action.payload.squares}), \n                xIsNext: !state.xIsNext,\n            }\n        default: \n            return state;\n    }\n}\n\nexport default function Game() {\n\n    const [state, dispatch] = useReducer(reducer, {\n        xIsNext: true,\n        history: [{squares: Array(9).fill(null)}] \n        })\n\n    const { xIsNext, history } = state;\n\n    const jumpTo = (step) => {\n        dispatch({type:'JUMP', payload:{step}})\n    }\n\n    const handleClick = (i) => {\n        const current = history[history.length -1]\n        const squares = current.squares.slice()\n        const winner = calculateWinner(squares)\n        if (winner || squares[i]){\n            return; \n        }\n        squares[i] = xIsNext ? 'X' : '0'\n        dispatch({ type: 'MOVE', payload: { squares} })\n    }\n\n    const current = history[history.length -1]\n\n    const winner = calculateWinner(current.squares)\n    \n    const status = winner ? winner=== 'D' ? 'Draw' :' winner is '+winner: \"Next player is \" + (xIsNext?'X':'0')\n\n    const moves = history.map((step, move) => {\n        const desc = move ? 'Go to #' + move: 'Start the Game'\n        return <li key={move}>\n            <button onClick={()=>jumpTo(move)}>\n                {desc}\n            </button>\n        </li>\n    })\n\n\n    return (\n        <div className={winner?\"game disabled\":\"game\"}> \n            <div className=\"game-board\">\n                <Board onClick={(i) => handleClick(i)} squares={current.squares}></Board>\n            </div>\n            <div className=\"game-info\">\n                <div>{status}</div>                \n                <ul>{moves}</ul>\n            </div>\n        </div>\n    )\n}\n\nconst calculateWinner = (squares) => {\n    const winnerLines = [\n        [0,1,2],\n        [3,4,5],\n        [6,7,8],\n        [0,3,6],\n        [1,4,7],\n        [2,5,8],\n        [0,4,8],\n        [2,4,6],\n    ]\n\n    let isDraw = true\n    for (let i = 0; i < winnerLines.length; i++){\n        const [a,b,c] = winnerLines[i];\n\n        if ( squares[a] && squares[a] === squares[b] && squares[b] === squares[c] ){\n            return squares[a]\n        }\n        if (!squares[a] || !squares[b] || !squares[c]){\n            isDraw = false;            \n        }\n    }\n    if (isDraw) return 'D';\n    return null;\n}","import Game from './components/Game';\n\nfunction App() {\n  return (\n    <Game />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}